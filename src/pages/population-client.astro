---
import Layout from "../layouts/Layout.astro";
import population from "../assets/population.json";

// Listes pour les menus
const listePeriode = [...new Set(population.map(d => d["Période"]))].sort((a,b)=>b-a);
const listeSexe    = [...new Set(population.map(d => d["Sexe"]).filter(Boolean))];
const listeAge     = [...new Set(population.map(d => d["Âge"]).filter(Boolean))];
---

<Layout title="TP7 — Population (client)">
  <h1 class="text-2xl mb-4">Population — filtres (année / sexe / âge)</h1>

  <form class="flex flex-wrap gap-4 items-end mb-4">
    <label class="flex flex-col gap-1">
      <span>Année</span>
      <select id="periode" class="px-3 py-2 rounded border">
        {listePeriode.map((p, i) => <option selected={i === 0} value={p}>{p}</option>)}
      </select>
    </label>

    <!-- Ces deux menus n’agissent que si le JSON contient autre chose que “Total” -->
    <label class="flex flex-col gap-1">
      <span>Sexe</span>
      <select id="sexe" class="px-3 py-2 rounded border">
        <option value="">Tous</option>
        {listeSexe.map(s => <option value={s}>{s}</option>)}
      </select>
    </label>

    <label class="flex flex-col gap-1">
      <span>Âge</span>
      <select id="age" class="px-3 py-2 rounded border">
        <option value="">Tous</option>
        {listeAge.map(a => <option value={a}>{a}</option>)}
      </select>
    </label>
  </form>

  <div id="vis" class="rounded-xl overflow-hidden border min-h-[520px]"></div>

  <script type="module">
    import * as Plot from "@observablehq/plot";
    import dataRaw from "../assets/population.json";

    // Valeurs numériques robustes (supprime les espaces, gère chaînes)
    const toNumber = v => Number(String(v).replace(/\s/g, "").replace(",", "."));
    const data = dataRaw.map(d => ({ ...d, Valeur: toNumber(d["Valeur"]) || 0 }));

    const $vis = document.querySelector("#vis");
    const $periode = document.querySelector("#periode");
    const $sexe = document.querySelector("#sexe");
    const $age = document.querySelector("#age");

    function filtreRows() {
      const annee = Number($periode.value);
      const sexe  = $sexe.value;
      const age   = $age.value;

      return data.filter(d =>
        d["Période"] === annee &&
        (sexe === "" || d["Sexe"] === sexe) &&
        (age  === "" || String(d["Âge"]) === String(age))
      );
    }

    function render() {
      // Avec ton jeu de données actuel → totaux par département
      const rows = filtreRows()
        .filter(d => d["Sexe"] === "Total" && d["Âge"] === "Total")
        .map(d => ({ dep: d["Géographie"], val: d["Valeur"] }))
        .sort((a, b) => b.val - a.val)
        .slice(0, 30);

      $vis.innerHTML = "";

      if (!rows.length) {
        $vis.innerHTML = `<div class="p-6 text-slate-400">Aucune donnée pour la combinaison sélectionnée.</div>`;
        return;
      }

      const plot = Plot.plot({
        title: "Population par département (Top 30)",
        ariaLabel: "Histogramme filtrable de population",
        height: 520,
        marginLeft: 100,
        marginBottom: 90,
        x: { label: "Département", tickRotate: -45 },
        y: { label: "Population", grid: true, tickFormat: d => d.toLocaleString("fr-FR") },
        marks: [
          Plot.barY(rows, { x: "dep", y: "val", tip: true, inset: 0.5 }),
          Plot.ruleY([0])
        ]
      });

      $vis.append(plot);
    }

    $periode.addEventListener("change", render);
    $sexe.addEventListener("change", render);
    $age.addEventListener("change", render);
    render();
  </script>
</Layout>
