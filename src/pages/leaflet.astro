---
import Layout from "../layouts/Layout.astro";
import "leaflet/dist/leaflet.css";
---

<Layout title="TP7 — Carte Leaflet">
  <h1 class="text-2xl mb-4">Leaflet — Départements / Population 2021</h1>

  <!-- UN SEUL conteneur carte -->
  <div id="map" style="height:600px; border-radius:12px; overflow:hidden;"></div>

  <script type="module">
    import L from "leaflet";
    import geo from "../assets/departementsGeoJSON.json";
    import pop from "../assets/population.json";

    // 1) Carte de base
    const map = L.map("map").setView([46.6, 2.2], 6);
    L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
      maxZoom: 19,
      attribution:
        '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    // 2) Index population 2021 (Total/Total)
    const byDept = new Map();
    for (const d of pop) {
      if (
        d["Niveau Géo"] === "Département" &&
        d["Période"] === 2021 &&
        d["Sexe"] === "Total" &&
        d["Âge"] === "Total"
      ) {
        byDept.set(normalize(d["Géographie"]), Number(d["Valeur"]));
      }
    }

    // petite normalisation nom (accents/casse)
    function normalize(s) {
      return s
        .normalize("NFD")
        .replace(/[\u0300-\u036f]/g, "")
        .toLowerCase()
        .replace(/\s+/g, " ")
        .trim();
    }

    // 3) palette simple
    function colorScale(v, min, max) {
      if (v == null) return "#eee";
      const t = (v - min) / (max - min || 1);
      const r = Math.round(255 * t);
      const b = Math.round(255 * (1 - t));
      return `rgb(${r},120,${b})`;
    }

    // bornes min/max pour la palette
    const values = [...byDept.values()];
    const min = Math.min(...values);
    const max = Math.max(...values);

    // 4) rendu GeoJSON
    const layer = L.geoJSON(geo, {
      style: f => {
        const nom = normalize(f.properties.nom);
        const val = byDept.get(nom);
        return {
          color: "#111",
          weight: 0.5,
          fillColor: colorScale(val, min, max),
          fillOpacity: 0.75
        };
      },
      onEachFeature: (feature, lyr) => {
        const nom = feature.properties.nom;
        const val = byDept.get(normalize(nom));
        lyr.bindPopup(`<b>${nom}</b><br>Population 2021 : ${val?.toLocaleString("fr-FR") ?? "n.d."}`);
        lyr.on("mouseover", () => lyr.setStyle({ weight: 1.5 }));
        lyr.on("mouseout",  () => lyr.setStyle({ weight: 0.5 }));
      }
    }).addTo(map);

    map.fitBounds(layer.getBounds());
  </script>
</Layout>
